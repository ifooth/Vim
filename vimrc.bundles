" Plugin config

set rtp+=$HOME/vimfiles/bundle/Vundle.vim/
call vundle#begin('$HOME/vimfiles/bundle/')

Plugin 'VundleVim/Vundle.vim'

Plugin 'https://github.com/Valloric/YouCompleteMe'
Plugin 'https://github.com/scrooloose/syntastic.git'
Plugin 'https://github.com/scrooloose/nerdcommenter.git'
Plugin 'https://github.com/SirVer/ultisnips.git'
Plugin 'https://github.com/honza/vim-snippets.git'

Plugin 'https://github.com/tell-k/vim-autopep8'
Plugin 'https://github.com/bronson/vim-trailing-whitespace.git'

Plugin 'https://github.com/Raimondi/delimitMate.git'
Plugin 'https://github.com/tpope/vim-surround.git'
Plugin 'https://github.com/tpope/vim-repeat.git'

Plugin 'https://github.com/kien/ctrlp.vim.git'
Plugin 'https://github.com/dyng/ctrlsf.vim'
Plugin 'https://github.com/sjl/gundo.vim'

"Plugin 'https://github.com/ryanoasis/vim-devicons.git'
"Plugin 'https://github.com/hdima/python-syntax.git'
Plugin 'https://github.com/szw/vim-ctrlspace.git'
"Plugin 'https://github.com/davidhalter/jedi-vim.git'


Plugin 'https://github.com/easymotion/vim-easymotion.git'
Plugin 'https://github.com/terryma/vim-multiple-cursors.git'
Plugin 'https://github.com/scrooloose/nerdtree.git'
Plugin 'https://github.com/majutsushi/tagbar.git'
Plugin 'https://github.com/bling/vim-airline.git'
call vundle#end()            " required
"
" NERDTree Conf
map <leader>n :NERDTreeToggle D:\WorkStation\Tencent-TP\PaaS<CR>
let NERDTreeIgnore=[ '\.pyc$', '\.pyo$', '\.obj$', '\.o$', '\.so$', '\.egg$', '^\.git$', '^\.svn$', '^\.hg$', '^templates_module$']

let g:NERDTreeDirArrowExpandable="▸"
let g:NERDTreeDirArrowCollapsible="▾"

"let g:airline#extensions#tabline#enabled = 1

let python_highlight_all = 1
let g:syntastic_error_symbol='>>'
let g:syntastic_warning_symbol='>'
let g:syntastic_check_on_open=1
let g:syntastic_check_on_wq=0
let g:syntastic_enable_highlighting=1

let g:syntastic_python_checkers=['pyflakes', 'pylint'] " 使用pyflakes,速度比pylint快
"let g:syntastic_python_checkers=['pylint'] " 使用pyflakes,速度比pylint快
let g:syntastic_python_pylint_args='--disable=C0111,R0903,C0301'

highlight SyntasticErrorSign guifg=white guibg=black
let g:syntastic_always_populate_loc_list = 0
let g:syntastic_auto_loc_list = 0
let g:syntastic_loc_list_height = 5

nnoremap <Leader>s :SyntasticCheck<CR>

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

"" for python docstring ",优化输入
au FileType python let b:delimitMate_nesting_quotes = ['"']
au FileType python let b:delimitMate_nesting_quotes = ["'"]

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_left_sep = '▶'
let g:airline_left_alt_sep = '❯'
let g:airline_right_sep = '◀'
let g:airline_right_alt_sep = '❮'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'

"augroup load_ycm
"  autocmd!
"  autocmd! InsertEnter *
"        \ call plug#load('YouCompleteMe')     |
"        \ if exists('g:loaded_youcompleteme') |
"        \   call youcompleteme#Enable()       |
"        \ endif                               |
"        \ autocmd! load_ycm
"augroup END
"
" 跳转到定义处, 分屏打开
let g:ycm_goto_buffer_command = 'horizontal-split'
" nnoremap <leader>jd :YcmCompleter GoToDefinition<CR>
nnoremap <leader>jd :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap <leader>gd :YcmCompleter GoToDeclaration<CR>
let g:ycm_add_preview_to_completeopt = 1
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1

let g:ctrlp_map = '<leader>p'
let g:ctrlp_cmd = 'CtrlP'
map <leader>f :CtrlPMRU<CR>
"let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
"let g:ctrlp_use_caching = 0

noremap <leader>h :GundoToggle<CR>

if executable("ag")
    let g:CtrlSpaceGlobCommand = 'ag -l --nocolor -g ""'
endif
nmap <F9> :TagbarToggle<CR>
let g:tagbar_iconchars = ['▶', '▼']
let g:tagbar_autofocus = 1

map <leader><space> :FixWhitespace<cr>
let g:EasyMotion_smartcase = 1
"let g:EasyMotion_startofline = 0 " keep cursor colum when JK motion
map <Leader><leader>h <Plug>(easymotion-linebackward)
map <Leader><Leader>j <Plug>(easymotion-j)
map <Leader><Leader>k <Plug>(easymotion-k)
map <Leader><leader>l <Plug>(easymotion-lineforward)
" 重复上一次操作, 类似repeat插件, 很强大
map <Leader><leader>. <Plug>(easymotion-repeat)
